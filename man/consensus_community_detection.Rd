% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/consensus.R
\name{consensus_community_detection}
\alias{consensus_community_detection}
\title{Consensus community detection}
\usage{
consensus_community_detection(
  g,
  t = 100,
  method = "LV",
  p = 0.6,
  q = 0.5,
  group_outliers = FALSE,
  resolution = NA,
  steps = c(5),
  IMtrials = 1,
  shuffle = TRUE
)
}
\arguments{
\item{p}{the threshold for gamma parameter used to calculate concensus, controlling the formation of single-node communities. Nodes that are assigned the same community label more than t*p times are clusterd together; otherwise they will form a single-node community. Possible values between 0.0 and 1.0. Typical values are p  = 0.5 (large consensus communities) or p = 0.9 (smaller, sharper consensus communities, with a larger number of single-node communities)}

\item{g:}{the network to be analysed. It must be an iGraph object with a node attribute V(g)$id as an integer value, and an edge attribute E(g)$weight as a numeric value. If g is unweighted, E(g)$weight must be set to 1.0. The graph is treated as undirected.}

\item{t:}{the number of independent trials}

\item{method:}{the method chosen for community detection. Possible values are:  "ML" multilevel.community(), "LD" cluster_leiden(), "FG" fastgreedy.community(), "IM" infomap.community(), "LP" label.propagation.community(), "WT" walktrap.community() and "LE" leading.eigenvector.community(g).}

\item{resolution:}{the resolution parameter of LV algorithm}

\item{shuffle:}{a boolean parameter. If TRUE the network vertices are randomly permuted before each trial of community detection. It allows to obtain results that are no dependent on the order of nodes and edges within the network. (default value = TRUE).}
}
\value{
returns a community object, that stores the community labels as $membership and the uncertainty coefficients as $uncertainty
}
\description{
Performs a consensus community detection algorithm on a given network g, using one of a set of algorithms from the R iGraph library. The result is a more stable than a single-trial, and includes an estimate of uncertainty associated with each community label.
}
